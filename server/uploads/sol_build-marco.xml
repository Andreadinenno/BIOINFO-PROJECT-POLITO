<?xml version="1.0" encoding="UTF-8"?>

<project name="sol_build" basedir=".">

	<!-- The base location -->
	<property name="basedir" location="." />

	<!-- The location to be used for class files -->
	<property name="build.dir" location="${basedir}/build" />
	<!-- The location for source files -->
	<property name="src.dir" location="${basedir}/src" />
	<!-- The location for jar files -->
	<property name="lib.dir" location="${basedir}/lib" />
	<!-- The location for custom files -->
	<property name="custom.dir" location="${basedir}/custom" />
	<!-- The location for xsd files -->
	<property name="xsd.dir" location="${basedir}/xsd" />
	<!-- The location for generated files -->
	<property name="gen.dir" location="${basedir}/gen" />

	<!-- The location for extra jar files -->
	<property name="shared.location" location="/opt/dp2/shared" />
	<property name="ext.lib.dir" location="${shared.location}/lib" />

	<!-- The default port for Tomcat -->
	<property name="PORT" value="8080" />
	<!-- The location of the Neo4JSimpleXML web service -->
	<property name="Neo4JSimpleXMLURL" value="http://localhost:${PORT}/Neo4JSimpleXML/webapi" /> 
	<property name="Neo4JSimpleXMLWADL" value="${Neo4JSimpleXMLURL}/application.wadl" />

	<!-- The class path containing the classes of the service -->
	<property name="service.path" value="it/polito/dp2/NFV/sol3/service/**" />
	<!-- The class path containing the classes of the client1 -->
	<property name="client1.path" value="it/polito/dp2/NFV/sol3/client1/**" />
	<!-- The class path containing the classes of the client2 -->
	<property name="client2.path" value="it/polito/dp2/NFV/sol3/client2/**" />

	<!-- The class path containing the classes generated from the XML schema -->
	<property name="service.bindings.path" value="it/polito/dp2/NFV/sol3/service/data/jaxb" />
	<!-- The class path containing the classes generated from the Neo4J WADL -->
	<property name="service.artifacts.path" value="it/polito/dp2/NFV/sol3/service/neo4j/artifacts" />

	<!-- The package to be assigned to classes generated from the schema -->
	<property name="service.bindings.package" value="it.polito.dp2.NFV.sol3.service.data.jaxb" />
	<!-- The package to be assigned to classes generated from the Neo4J WADL -->
	<property name="service.artifacts.package" value="it.polito.dp2.NFV.sol3.service.neo4j.artifacts" />

	<!-- Java compiler settings -->
	<property name="debug" value="true" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />

	<!-- The class path containing all the needed libraries -->
	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Define wjc task (WADL to Java) -->
	<taskdef name="wjc" classname="org.jvnet.ws.wadl2java.WJCTask">
		<classpath>
			<fileset dir="${ext.lib.dir}" includes="*.jar" />
		</classpath>
	</taskdef>

	<!-- The target used to build the service -->
	<target name="build-service" depends="generate-bindings,generate-artifacts-neo4j" description="Build the service">
		<echo>Building the service (if needed)...</echo>
		<javac destdir="${build.dir}" debug="${debug}" debuglevel="${debuglevel}" source="${source}" target="${target}" includeantruntime="false">

			<src path="${src.dir}" />
			<src path="${gen.dir}" />

			<include name="${service.path}" />
			<classpath>
				<path refid="classpath" />
			</classpath>

		</javac>
		<echo>Done.</echo>
	</target>

	<!-- The target used to build the clients -->
	<target name="build-client" depends="build-client1, build-client2" description="Build the clients" />

	<!-- The target used to build the first client -->
	<target name="build-client1" depends="generate-bindings" description="Build the first client">
		<echo>Building the first client (if needed)...</echo>
		<javac destdir="${build.dir}" debug="${debug}" debuglevel="${debuglevel}" source="${source}" target="${target}" includeantruntime="false">

			<src path="${src.dir}" />
			<src path="${gen.dir}" />

			<include name="${client1.path}" />
			<include name="${service.bindings.path}" />
			<classpath>
				<path refid="classpath" />
			</classpath>

		</javac>
		<echo>Done.</echo>
	</target>

	<!-- The target used to build the second client -->
	<target name="build-client2" depends="generate-bindings" description="Build the second client">
		<echo>Building the second client (if needed)...</echo>
		<javac destdir="${build.dir}" debug="${debug}" debuglevel="${debuglevel}" source="${source}" target="${target}" includeantruntime="false">

			<src path="${src.dir}" />
			<src path="${gen.dir}" />

			<include name="${client2.path}" />
			<include name="${service.bindings.path}" />
			<classpath>
				<path refid="classpath" />
			</classpath>

		</javac>
		<echo>Done.</echo>
	</target>

	<target name="init-bindings">
		<mkdir dir="${gen.dir}" />
	</target>

	<!-- Target chk-bindings -->
	<target name="-chk-bindings" depends="init-bindings">
		<uptodate property="generate-bindings.notRequired" targetfile="${gen.dir}/.flagfile">
			<srcfiles dir="${xsd.dir}" includes="**/*.xsd" />
		</uptodate>
	</target>

	<!-- Target generate-bindings -->
	<target name="generate-bindings" unless="generate-bindings.notRequired" depends="-chk-bindings" description="Generate bindings from schema">
		<exec executable="xjc" failonerror="true">
			<arg value="-d" />
			<arg value="${gen.dir}" />
			<arg value="-p" />
			<arg value="${service.bindings.package}" />
			<arg value="${xsd.dir}/NfvDeployer.xsd" />
		</exec>
		<touch file="${gen.dir}/.flagfile" />
	</target>

	<!-- Target generate-artifacts-neo4j -->
	<target name="generate-artifacts-neo4j" depends="init-bindings">
		<wjc description="${Neo4JSimpleXMLWADL}" package="${service.artifacts.package}" autoSchemaPackage="false" target="${gen.dir}">
			<produces dir="${gen.dir}/${service.artifacts.path}" includes="*.java" />
			<depends dir="${basedir}" includes="sol_build.xml" />
		</wjc>
	</target>

</project>
